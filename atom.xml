<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kzbssthank_blog</title>
  <icon>https://www.gravatar.com/avatar/c0c34c43cc5a13df6ceea9e6501e91d5</icon>
  
  <link href="https://kzbssthank.github.io/atom.xml" rel="self"/>
  
  <link href="https://kzbssthank.github.io/"/>
  <updated>2022-08-15T01:26:38.283Z</updated>
  <id>https://kzbssthank.github.io/</id>
  
  <author>
    <name>君子藏锋</name>
    <email>3096624145@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MyBatis-Plus</title>
    <link href="https://kzbssthank.github.io/post/85c56f8d.html"/>
    <id>https://kzbssthank.github.io/post/85c56f8d.html</id>
    <published>2022-08-13T01:36:29.000Z</published>
    <updated>2022-08-15T01:26:38.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>无侵入</li><li>损耗小</li><li>强大的 CRUD 操作</li><li>支持 Lambda 形式调用</li><li>支持主键自动生成</li><li>支持 ActiveRecord 模式</li><li>支持自定义全局通用操作</li><li>内置代码生成器</li><li>内置分页插件</li><li>分页插件支持多种数据库</li><li>内置性能分析插件</li><li>内置全局拦截插件</li></ul><blockquote><p>任何能使用 MyBatis 进行 CRUD，并且支持标准 SQL 的数据库，都能够使用 MP</p></blockquote><h2 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h2><p><img src="https://baomidou.com/img/mybatis-plus-framework.jpg" alt="framework"></p><p>快速开始请参考 MP 官网 <a href="https://baomidou.com/pages/226c21/#%E7%BC%96%E7%A0%81">快速开始 | MyBatis-Plus (baomidou.com)</a></p><h2 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h2><h3 id="TableName"><a href="#TableName" class="headerlink" title="@TableName"></a>@TableName</h3><p>表名注解，描述实体类对应的数据库表</p><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">必须指定</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">value</td><td align="left">String</td><td align="left">否</td><td align="left">“”</td><td align="left">表名</td></tr><tr><td align="left">schema</td><td align="left">String</td><td align="left">否</td><td align="left">“”</td><td align="left">schema</td></tr><tr><td align="left">keepGlobalPrefix</td><td align="left">boolean</td><td align="left">否</td><td align="left">false</td><td align="left">是否保持使用全局的 tablePrefix 的值（当全局 tablePrefix 生效时）</td></tr><tr><td align="left">resultMap</td><td align="left">String</td><td align="left">否</td><td align="left">“”</td><td align="left">xml 中 resultMap 的 id（用于满足特定类型的实体类对象绑定）</td></tr><tr><td align="left">autoResultMap</td><td align="left">boolean</td><td align="left">否</td><td align="left">false</td><td align="left">是否自动构建 resultMap 并使用（如果设置 resultMap 则不会进行 resultMap 的自动构建与注入）</td></tr><tr><td align="left">excludeProperty</td><td align="left">String[]</td><td align="left">否</td><td align="left">{}</td><td align="left">需要排除的属性名 @since 3.3.1</td></tr></tbody></table><h3 id="TableId"><a href="#TableId" class="headerlink" title="@TableId"></a>@TableId</h3><p>表的主键注解，用于实体类主键字段</p><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">必须指定</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">value</td><td align="left">String</td><td align="left">否</td><td align="left">“”</td><td align="left">主键字段名</td></tr><tr><td align="left">type</td><td align="left">Enum</td><td align="left">否</td><td align="left">IdType.NONE</td><td align="left">指定主键类型</td></tr></tbody></table><p><code>type</code>有以下类型</p><table><thead><tr><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">AUTO</td><td align="left">数据库 ID 自增</td></tr><tr><td align="left">NONE</td><td align="left">无状态，该类型为未设置主键类型（注解里等于跟随全局，全局里约等于 INPUT）</td></tr><tr><td align="left">INPUT</td><td align="left">insert 前自行 set 主键值</td></tr><tr><td align="left">ASSIGN_ID</td><td align="left">分配 ID(主键类型为 Number(Long 和 Integer)或 String)(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextId</code>(默认实现类为<code>DefaultIdentifierGenerator</code>雪花算法)</td></tr><tr><td align="left">ASSIGN_UUID</td><td align="left">分配 UUID,主键类型为 String(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextUUID</code>(默认 default 方法)</td></tr><tr><td align="left"><del>ID_WORKER</del></td><td align="left">分布式全局唯一 ID 长整型类型(please use <code>ASSIGN_ID</code>)</td></tr><tr><td align="left"><del>UUID</del></td><td align="left">32 位 UUID 字符串(please use <code>ASSIGN_UUID</code>)</td></tr><tr><td align="left"><del>ID_WORKER_STR</del></td><td align="left">分布式全局唯一 ID 字符串类型(please use <code>ASSIGN_ID</code>)</td></tr></tbody></table><h3 id="TableFiled"><a href="#TableFiled" class="headerlink" title="@TableFiled"></a>@TableFiled</h3><p>字段注解，非主键</p><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">必须指定</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">value</td><td align="left">String</td><td align="left">否</td><td align="left">“”</td><td align="left">数据库字段名</td></tr><tr><td align="left">exist</td><td align="left">boolean</td><td align="left">否</td><td align="left">true</td><td align="left">是否为数据库表字段</td></tr><tr><td align="left">condition</td><td align="left">String</td><td align="left">否</td><td align="left">“”</td><td align="left">字段 <code>where</code> 实体查询比较条件，有值设置则按设置的值为准，没有则为默认全局的 `%s=#</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;特性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;无侵入&lt;/li&gt;
&lt;li&gt;损耗小&lt;/li&gt;
&lt;li&gt;强大的 CRUD 操作&lt;/li&gt;
&lt;li&gt;支持 Lambda 形式调用&lt;/l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>日记</title>
    <link href="https://kzbssthank.github.io/post/4a17b156.html"/>
    <id>https://kzbssthank.github.io/post/4a17b156.html</id>
    <published>2022-01-07T01:47:37.883Z</published>
    <updated>2022-08-31T05:39:57.239Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>2022/08/31</p><p>被学校恶心到了  </p><p>计算机专业本来就是在九月十月秋招热季找工作，但是学校让不参加学校指定培训单位培训的同学都参加校内实习，并且不允许个人在十一月份以前找工作，这不是纯纯恶心学生吗。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;2022/08/31&lt;/p&gt;
&lt;p&gt;被学校恶心到了  &lt;/p&gt;
&lt;p&gt;计算机专业本来就是在九月十月秋招热季找工作，但是学校让不参加学校指定培训单位培训的同学都参加校内实习，并且不允许个人在十一月份以前找工作，这不是纯纯恶心学生吗。&lt;/p&gt;
&lt;/li&gt;
&lt;/</summary>
      
    
    
    
    
  </entry>
  
</feed>
